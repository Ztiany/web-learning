/*
 * 变量名和作用域。
 *
 *  1. 一个信息量丰富的变量名总是最好的吗？当然不是，变量名和作用域也是息息相关的。
 *     我们都知道全局变量会污染全局环境，过多的全局变量经常会导致多人协作变量名冲
 *     突的问题，但泛泛的变量名也是全局变量带来的问题之一。
 *
 *  2. 在 ES6 之前，如果我们想要避免全局变量的污染，只能将变量挂载到一个对象中，
 *     将这个对象暴露到全局中。这样做的好处就是将多个全局变量按功能进行了划分，
 *     不管是可读性还是扩展性上都有不错的表现。
 *
 *  3. 在 ES6 有了模块化规范之后，管理变量就更加容易了。一个文件就可以是一个模块，
 *     这个文件中定义的变量也不会污染全局。又因为模块都是定义好的，所以模块名也可
 *     以起到限制的作用，在模块中的变量我们都知道是和这个模块功能息息相关的。
 */

let jQuery = Object();
jQuery.fn = Object();

// 为了避免全局变量的污染，我们将变量挂载到一个对象中。
// 在全局中有 `find` 和 `remove` 两个方法，我们可能不知道这是干什么的。但是在我们常用的 `jQuery` 中，我们就很容易知道这是查询和删除 `DOM` 节点的。
(function ($) {
    let find = () => {};
    let remove = () => {};
    $.fn.find = find;
    $.fn.remove = remove;
})(jQuery);
